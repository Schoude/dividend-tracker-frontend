---
import FundDetails from "../../../../components/FundDetails.astro";
import StockDetails from "../../../../components/StockDetails.astro";
import OrderInstrument from "../../../../components/common/OrderInstrument.astro";
import Orders from "../../../../components/common/Orders.astro";
import Layout from "../../../../layouts/Layout.astro";
import type {
  FundFullInfo,
  PortfolioDetailResponse,
  StockFullInfo,
} from "../../../../types";
import { formatCurrency } from "../../../../utils/intl";
import { getLogoUrl } from "../../../../utils/logos";

const { id, isin } = Astro.params;

const portfolioResponse = (await (
  await fetch(`${import.meta.env.VITE_URL_BASE}/api/portfolio/${id}/detail`)
).json()) as PortfolioDetailResponse;

const isInstrumentFromPortfolio =
  portfolioResponse.data.stocks.some((stock) => stock.isin === isin) ||
  portfolioResponse.data.funds.some((stock) => stock.isin === isin);

let detailInstrument: StockFullInfo | FundFullInfo | undefined;

if (!isInstrumentFromPortfolio) {
  const { data } = await (
    await fetch(`${import.meta.env.VITE_URL_BASE}/api/instrument/${isin}`)
  ).json();

  detailInstrument = data;
} else {
  detailInstrument = portfolioResponse.data.stocks.some(
    (stock) => stock.isin === isin
  )
    ? (portfolioResponse.data.stocks.find(
        (stock) => stock.isin === isin
      ) as StockFullInfo)
    : (portfolioResponse.data.funds.find(
        (fund) => fund.isin === isin
      ) as FundFullInfo);
}

const price = formatCurrency(detailInstrument?.price_snapshot!, "EUR", "de-DE");

const ordersOfInstrument = portfolioResponse.data.orders.filter(
  (order) => order.isin === detailInstrument?.isin
);

const recommendationsResponse = (await (
  await fetch(
    `${import.meta.env.VITE_URL_BASE}/api/instruments/recommendations/${isin}`
  )
).json()) as { data: { stocks: StockFullInfo[]; funds: FundFullInfo[] } };
---

<Layout title={`Neue Order fÃ¼r Portfolio ${portfolioResponse.data.name}`}>
  <main>
    <h1>
      <a href={`/portfolio/${id}/detail`}
        ><q>{portfolioResponse.data.name}</q></a
      >
    </h1>
    <h2 class="name-instrument" title={detailInstrument?.name}>
      <img
        src={getLogoUrl(detailInstrument!)}
        alt={`Logo ${detailInstrument?.name}`}
        width="40"
        height="40"
        loading="lazy"
      />
      <span>{detailInstrument?.name}</span>
      <small>@ {price}</small>
    </h2>

    <OrderInstrument
      instrument={detailInstrument!}
      portfolioResponse={portfolioResponse}
      isInstrumentFromPortfolio={isInstrumentFromPortfolio}
    />

    <Orders
      ordersOfInstrument={ordersOfInstrument}
      portfolio_id={portfolioResponse.data.id}
    />

    <section class="grid">
      {
        detailInstrument?.type_id === "stock" ? (
          <StockDetails stock={detailInstrument as StockFullInfo} />
        ) : (
          <FundDetails fund={detailInstrument as FundFullInfo} />
        )
      }

      <div class="recommendations-list">
        <h3>Interessante Aktien</h3>
        <ul class="recommendations">
          {
            recommendationsResponse.data.stocks.map((stock) => (
              <li>
                <a
                  class="instrument"
                  href={`/portfolio/${id}/order/${stock.isin}`}
                >
                  <img
                    src={getLogoUrl(stock)}
                    alt={`Logo ${stock.name}`}
                    width="40"
                    height="40"
                    height="40"
                    loading="lazy"
                  />
                  <span class="name">{stock.name}</span>
                  <span class="price">
                    {formatCurrency(stock.price_snapshot, "EUR", "de-DE")}
                  </span>
                </a>
              </li>
            ))
          }
        </ul>

        <h3>Interessante ETFs</h3>
        <ul class="recommendations">
          {
            recommendationsResponse.data.funds.map((fund) => (
              <li>
                <a
                  class="instrument"
                  href={`/portfolio/${id}/order/${fund.isin}`}
                >
                  <img
                    src={getLogoUrl(fund)}
                    alt={`Logo ${fund.name}`}
                    width="40"
                    height="40"
                    height="40"
                    loading="lazy"
                  />
                  <span class="name">{fund.name}</span>
                  <span class="price">
                    {formatCurrency(fund.price_snapshot, "EUR", "de-DE")}
                  </span>
                </a>
              </li>
            ))
          }
        </ul>
      </div>
    </section>
  </main>
</Layout>

<style>
  .name-instrument {
    position: sticky;
    inset-block-start: 0;
    z-index: 1;
    padding-block: 0.25rem;
    background-color: hsl(0, 0%, 7%);
    display: flex;
    align-items: center;
    gap: 0.25rem;

    & span {
      font-size: 1.2rem;
      font-weight: 500;
      max-inline-size: 220px;
      overflow: hidden;
      white-space: nowrap;
      text-overflow: ellipsis;
    }

    & small {
      font-size: 1rem;
    }
  }

  ul {
    list-style: none;
    margin: 0;
    padding: 0;
  }

  li + li {
    margin-block-start: 1rem;
  }

  .recommendations-list {
    & h3 {
      font-size: 1.3rem;
      margin-block-start: 2rem;
      margin-block-end: 0.75rem;
    }
  }

  .recommendations {
    .instrument {
      font-size: 1.2rem;
      font-weight: 400;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .name {
      max-inline-size: 230px;
      overflow: hidden;
      white-space: nowrap;
      text-overflow: ellipsis;
    }

    .price {
      padding: 0;
      font-size: 1rem;
      flex-grow: 1;
      text-align: end;
    }
  }
</style>
