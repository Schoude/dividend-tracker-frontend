---
import Layout from "../../../layouts/Layout.astro";
import type { PortfolioDetailResponse } from "../../../types";
import { getValueOfPortfolio } from "../../../utils/calculation";
import { formatCurrency } from "../../../utils/intl";
import { getLogoUrl } from "../../../utils/logos";

const { id } = Astro.params;

const { data } = (await (
  await fetch(`${import.meta.env.VITE_URL_BASE}/api/portfolio/${id}/detail`)
).json()) as PortfolioDetailResponse;

const { totalFundsValue, totalStocksValue, totalValue } = getValueOfPortfolio(
  data.stocksStatus,
  data.fundsStatus
);
---

<Layout title={`Portfolio Detail: ${data.name}`}>
  <main>
    <h1>Portfolio "{data.name}"</h1>
    <section>
      <h2>Gesamtwert: {totalValue}</h2>
      <div class="amounts">
        <h3>Aktien: {totalStocksValue}</h3>
        <h3>ETFs: {totalFundsValue}</h3>
      </div>
    </section>
    <a class="link-overview-dividends" href={`/portfolio/${id}/dividends`}
      >Zur Dividenden-Ãœbersicht</a
    >
    <section class="investments">
      <h2 class="title-investments">Investments:</h2>

      <div class="grid">
        <div class="investments-stocks">
          <ul>
            {
              data.stocksStatus
                .sort((a, b) => b.currentValue - a.currentValue)
                .map((stock) => (
                  <li>
                    <div class="investment">
                        <a
                          class="investment-name"
                          href={`/stock/${stock.isin}/detail`}
                        >
                          <img
                            src={getLogoUrl(
                              data.stocks.find(
                                (iterStock) => iterStock.isin === stock.isin
                              )!
                            )}
                            alt={`Logo ${stock.name}`}
                            width="40"
                            height="40"
                          />
                          {stock.name}
                        </a>
                      <div
                        class="details"
                        class:list={
                          Number(stock.percentChange) < 0
                            ? "loss"
                            : Number(stock.percentChange) > 0
                              ? "gain"
                              : ''
                        }
                      >
                        <p>
                          {formatCurrency(stock.currentPrice, 'EUR', 'de-DE')}
                          {stock.percentChange}%
                        </p>
                        <p>{formatCurrency(stock.currentValue, 'EUR', 'de-DE')}</p>
                      </div>
                    </div>
                  </li>
                ))
            }
          </ul>
        </div>
        <div class="investments-funds">
          <ul>
            {
              data.fundsStatus
                .sort((a, b) => b.currentValue - a.currentValue)
                .map((fund) => (
                  <li>
                    <div class="investment">
                      <p class="investment-name">
                        <a
                          class="investment-name"
                          href={`/fund/${fund.isin}/detail`}
                        >
                          <img
                            src={getLogoUrl(
                              data.funds.find(
                                (iterFund) => iterFund.isin === fund.isin
                              )!
                            )}
                            alt={`Logo ${fund.name}`}
                            width="40"
                            height="40"
                            height="40"
                          />
                          {fund.name}
                        </a>
                      <div
                        class="details"
                        class:list={
                          Number(fund.percentChange) < 0 ? "loss" : "gain"
                        }
                      >
                      <p>
                          {formatCurrency(fund.currentPrice, 'EUR', 'de-DE')}
                          {fund.percentChange}%
                        </p>
                        <p>{formatCurrency(fund.currentValue, 'EUR', 'de-DE')}</p>
                      </div>
                    </div>
                  </li>
                ))
            }
          </ul>
        </div>
      </div>
    </section>
  </main>
</Layout>

<style>
  .amounts {
    display: flex;
    gap: 1rem;
  }

  .link-overview-dividends {
    margin-block: 1rem;
    display: inline-block;

    &:hover {
      text-decoration: underline;
    }
  }

  .investments {
    .grid {
      display: grid;
      grid-template-columns: 1fr;
      gap: 5rem;

      @media screen and (min-width: 768px) {
        gap: initial;
        grid-template-columns: 1fr 1fr;
      }
    }
  }

  .title-investments {
    margin-bottom: 0.5rem;
  }

  ul {
    list-style: none;
    margin: 0;
    padding: 0;
  }

  li + li {
    margin-block-start: 0.75rem;
  }

  .investment-name {
    font-size: 1.2rem;
    font-weight: 400;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .details {
    &.gain {
      color: var(--green);
    }
    &.loss {
      color: var(--red);
    }
  }
</style>
